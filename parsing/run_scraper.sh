#!/bin/bash

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}========================================${NC}"
echo -e "${BLUE}    PropertyFinder Scraper Automation  ${NC}"
echo -e "${BLUE}========================================${NC}"

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
VENV_DIR="venv"
SCRAPED_DATA_DIR="scraped_data"
REQUIREMENTS_FILE="requirements.txt"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date '+%Y-%m-%d %H:%M:%S')]${NC} $1"
}

log_error() {
    echo -e "${RED}[$(date '+%Y-%m-%d %H:%M:%S')] ERROR:${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[$(date '+%Y-%m-%d %H:%M:%S')] WARNING:${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Python
if ! command -v python3 &> /dev/null; then
    log_error "Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python3 –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
    exit 1
fi

# 1. –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -d "$VENV_DIR" ]; then
    log "–°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
    python3 -m venv "$VENV_DIR"
    log "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: $VENV_DIR"
else
    log "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $VENV_DIR"
fi

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
log "–ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
source "$VENV_DIR/bin/activate"

# 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
if [ -f "$REQUIREMENTS_FILE" ]; then
    log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ $REQUIREMENTS_FILE..."
    pip install --upgrade pip
    pip install -r "$REQUIREMENTS_FILE"
    log "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
else
    log_warning "–§–∞–π–ª $REQUIREMENTS_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    pip install --upgrade pip
    pip install requests beautifulsoup4 lxml
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
mkdir -p "$SCRAPED_DATA_DIR"

# –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø–∞–ø–∫–∏ –≤ scraped_data
EXISTING_DIRS=$(find "$SCRAPED_DATA_DIR" -maxdepth 1 -type d -name "scrape_*" 2>/dev/null || echo "")

# 3. –ó–∞–ø—É—Å–∫–∞–µ–º a_buy.py
log "–ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç a_buy.py..."
if [ -f "a_buy.py" ]; then
    python a_buy.py
    log "–°–∫—Ä–∏–ø—Ç a_buy.py –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    log_error "–§–∞–π–ª a_buy.py –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# 4. –ó–∞–ø—É—Å–∫–∞–µ–º a.py
log "–ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç a.py..."
if [ -f "a.py" ]; then
    python a.py
    log "–°–∫—Ä–∏–ø—Ç a.py –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    log_error "–§–∞–π–ª a.py –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# 5. –ù–∞—Ö–æ–¥–∏–º –Ω–æ–≤—ã–µ –ø–∞–ø–∫–∏, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç–∞–º–∏
log "–ò—â–µ–º –Ω–æ–≤—ã–µ –ø–∞–ø–∫–∏, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç–∞–º–∏..."
NEW_DIRS=$(find "$SCRAPED_DATA_DIR" -maxdepth 1 -type d -name "scrape_*" 2>/dev/null || echo "")

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã —ç—Ç–∏–º –∑–∞–ø—É—Å–∫–æ–º
CREATED_DIRS=""
for dir in $NEW_DIRS; do
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ —ç—Ç–∞ –ø–∞–ø–∫–∞ –≤ —Å–ø–∏—Å–∫–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö
    if ! echo "$EXISTING_DIRS" | grep -q "$dir"; then
        CREATED_DIRS="$CREATED_DIRS $dir"
    fi
done

if [ -z "$CREATED_DIRS" ]; then
    log_warning "–ù–æ–≤—ã–µ –ø–∞–ø–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –ø–∞–ø–∫–∏ scrape_*"
    CREATED_DIRS="$NEW_DIRS"
fi

# 6. –î–ª—è –∫–∞–∂–¥–æ–π —Å–æ–∑–¥–∞–Ω–Ω–æ–π –ø–∞–ø–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º take_all.py
for dir in $CREATED_DIRS; do
    if [ -d "$dir" ]; then
        log "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–∞–ø–∫—É: $dir"
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º take_all.py –¥–ª—è —ç—Ç–æ–π –ø–∞–ø–∫–∏
        if [ -f "take_all.py" ]; then
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
            dir_name=$(basename "$dir")
            output_file="${dir}/processed_${dir_name}.json"
            
            log "–ó–∞–ø—É—Å–∫–∞–µ–º take_all.py –¥–ª—è $dir..."
            python take_all.py "$dir" "$output_file"
            
            if [ $? -eq 0 ]; then
                log "take_all.py –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ –¥–ª—è $dir"
                
                # 7. –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –∫—Ä–æ–º–µ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö take_all.py
                log "–û—á–∏—â–∞–µ–º –ø–∞–ø–∫—É $dir –æ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ take_all.py (JSON —Ñ–∞–π–ª—ã —Å processed_ –≤ –∏–º–µ–Ω–∏)
                # –£–¥–∞–ª—è–µ–º json_data –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ –µ—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                if [ -d "$dir/json_data" ]; then
                    rm -rf "$dir/json_data"
                    log "–£–¥–∞–ª–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è json_data –∏–∑ $dir"
                fi
                
                # –£–¥–∞–ª—è–µ–º –¥—Ä—É–≥–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞–∂–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                find "$dir" -name "*.json" ! -name "processed_*" ! -name "properties.json" -delete 2>/dev/null || true
                
                log "–û—á–∏—Å—Ç–∫–∞ –ø–∞–ø–∫–∏ $dir –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
            else
                log_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ take_all.py –¥–ª—è $dir"
            fi
        else
            log_error "–§–∞–π–ª take_all.py –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        fi
    fi
done

# 8. –ò–º–ø–æ—Ä—Ç –≤ Django (–µ—Å–ª–∏ –µ—Å—Ç—å property_analyzer)
if [ -d "property_analyzer" ]; then
    log "–ó–∞–ø—É—Å–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ Django –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
    
    cd property_analyzer
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    if [ ! -f "db.sqlite3" ]; then
        log "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö Django..."
        python manage.py makemigrations
        python manage.py migrate
    fi
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    for dir in $CREATED_DIRS; do
        if [ -d "../$dir" ]; then
            log "–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ $dir –≤ Django..."
            python manage.py import_properties "../$dir" --update
        fi
    done
    
    cd ..
    
    log "Django –∏–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
    echo -e "  ${YELLOW}cd property_analyzer && python manage.py runserver${NC}"
    echo -e "  ${YELLOW}–ó–∞—Ç–µ–º –æ—Ç–∫—Ä–æ–π—Ç–µ: http://127.0.0.1:8000/${NC}"
fi

# –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
deactivate

log "–í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
echo -e "${BLUE}========================================${NC}"
echo -e "${GREEN}         –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!           ${NC}"
echo -e "${BLUE}========================================${NC}"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤–æ–¥–∫—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
echo -e "${YELLOW}–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤:${NC}"
for dir in $CREATED_DIRS; do
    if [ -d "$dir" ]; then
        echo -e "  üìÅ $dir"
        ls -la "$dir"/*.json 2>/dev/null | sed 's/^/    /' || echo "    (–Ω–µ—Ç JSON —Ñ–∞–π–ª–æ–≤)"
    fi
done

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–ø—É—Å–∫—É Django
if [ -d "property_analyzer" ]; then
    echo ""
    echo -e "${BLUE}üåê –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:${NC}"
    echo -e "  ${GREEN}cd property_analyzer${NC}"
    echo -e "  ${GREEN}python manage.py runserver${NC}"
    echo -e "  ${GREEN}–û—Ç–∫—Ä–æ–π—Ç–µ: http://127.0.0.1:8000/${NC}"
fi 